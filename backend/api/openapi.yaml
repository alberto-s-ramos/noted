openapi: 3.0.3
info:
  title: Noted API
  description: API for the Noted application
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/v1
    description: Development server

paths:
  /health:
    get:
      summary: Health check
      description: Returns the health status of the API
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  environment:
                    type: string
                    example: development
                  message:
                    type: string
                    example: Noted Backend API is running

  /ping:
    get:
      summary: Ping endpoint
      description: Simple ping endpoint for testing connectivity
      responses:
        '200':
          description: Pong response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: pong
                  status:
                    type: string
                    example: healthy

  /notes:
    get:
      summary: Get all notes
      description: Retrieve all notes
      responses:
        '200':
          description: List of notes
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'
    post:
      summary: Create a new note
      description: Create a new note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteRequest'
      responses:
        '201':
          description: Note created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Note'

  /notes/{id}:
    get:
      summary: Get a note by ID
      description: Retrieve a specific note by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Note found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: string
                  data:
                    $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    put:
      summary: Update a note
      description: Update an existing note
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteRequest'
      responses:
        '200':
          description: Note updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: string
                  data:
                    $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    delete:
      summary: Delete a note
      description: Delete an existing note
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Note deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: string
        '404':
          description: Note not found

components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          example: "My Note Title"
        content:
          type: string
          example: "This is the content of my note."
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"

    CreateNoteRequest:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
          example: "My Note Title"
        content:
          type: string
          example: "This is the content of my note."

    UpdateNoteRequest:
      type: object
      properties:
        title:
          type: string
          example: "Updated Note Title"
        content:
          type: string
          example: "This is the updated content of my note."
