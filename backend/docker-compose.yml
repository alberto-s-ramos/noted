version: '3.8'

services:
  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - ENVIRONMENT=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=noted_user
      - DB_PASSWORD=noted_password
      - DB_NAME=noted_db
      - DB_SSLMODE=disable
      - FRONTEND_URL=http://localhost:5173
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - noted-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=noted_user
      - POSTGRES_PASSWORD=noted_password
      - POSTGRES_DB=noted_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U noted_user -d noted_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - noted-network

  # Redis (for caching, sessions, etc.)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - noted-network

volumes:
  postgres_data:
  redis_data:

networks:
  noted-network:
    driver: bridge
